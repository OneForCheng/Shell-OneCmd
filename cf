#!/usr/bin/env bash

cf(){

    showUsage(){
        echo "usage: cf [directory] [...]"
        echo "       cf -n"
        echo "       cf n."
        echo
        echo "       /?        Show usage."
        echo "       -n        The 'n' is a natural integer, which means jumping to the first n folder in history of 'dirs'."
        echo "       n.        The 'n' is a positive integer, which means jumping forward to the 'n' level directory."
        echo
        echo "       It is a enhanced command for 'cd' command."
        echo "       It will match down path of directory step by step if arguments are multiple."
        echo "       It will try jump to the directory of 'OLDPWD' variable if arguments are empty."
        echo "       It will automatic match the directory when the first argument is a part of the directory name."
        echo "       It will find the target directory in current folder, all sub-folders and up step by step parent folders until it finds first matching directory."
        echo
        echo "tip:"
        echo
        echo "       It needs '.' or 'source' to execute this script at first."
        echo
        return 0;
    }

    changeDirectoryByDefault(){
        [[ "$1" == "0" ]] && cd "$OLDPWD" && return 0;
        return 1;
    }

    changeDirectoryByHistory(){
        echo "$1" | grep -E "^-[0-9]+$" 1>/dev/null || return 1;
        cd $1 1>/dev/null
        return 0;
    }

    changeDirectoryByPartialMatching(){
        local folder
        local folders
        folders=("$1"/ "$1"*/ *"$1"/ *"$1"*/)

        for folder in "${folders[@]}"; do
            [[ -d "$folder" ]] && cd "$folder" && return 0;
        done

        return 1;
    }

    changeDirectoryByNumberDot(){
        echo "$1" | grep -E "^[1-9][0-9]*\\.$" 1>/dev/null || return 1;
        local i
        local prePath
        prePath=""
        for ((i=0; i<${1:0:-1}; i++)); do
            prePath="$prePath"../
        done
        cd "$prePath"
        return 0;
    }

    changeDirectoryByDownwardRecursive(){
        local folder
        folder=$(find . -type d -name "*$1*" -print -quit)
        [[ -d "$folder" ]] && cd "$folder" && return 0;

        return 1;
    }

    changeDirectoryByUpStepByStep(){
        local sprits
        local prePath
        local folder
        local folders
        sprits="${PWD//[^\/]}"
        prePath=../
        for ((i=0; i<${#sprits}; i++)); do
            folders=("$prePath"*"$1"*/)
            for folder in "${folders[@]}"; do
                [[ -d "$folder" ]] && cd "$folder" && return 0;
            done
            prePath="$prePath"../
        done
        
        return 1;
    }

    changeDirectoryByDownStepByStep(){
      local arg
      local folder
      local folders
      local prePath

      prePath=./
      for arg in "$@"; do
            folders=("$prePath"*"$arg"*/)
            for folder in "${folders[@]}"; do
                [[ -d "$folder" ]] && prePath="$folder" && break;
                echo No such directory: "$folder"
                return 0;
            done
      done

      cd "$prePath"

      return 0;
    }

    main(){
        [[ "$*" == *"/?"* ]] && showUsage && return 0;
        [[ $# -gt 1 ]] && changeDirectoryByDownStepByStep "$@" && return 0;

        changeDirectoryByDefault "$#" && return 0;
        changeDirectoryByHistory "$1" && return 0;
        changeDirectoryByPartialMatching "$1" && return 0;
        changeDirectoryByNumberDot "$1" && return 0;
        changeDirectoryByDownwardRecursive "$1" && return 0;
        changeDirectoryByUpStepByStep "$1" && return 0;

        echo No such directory: "$1"
        return 1;
    }

    main "$@"
}

cf "$@"
